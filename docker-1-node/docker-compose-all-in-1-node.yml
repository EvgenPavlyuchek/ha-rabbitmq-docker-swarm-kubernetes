services:
  rabbitmq-1:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq1
    hostname: rabbitmq1
    restart: unless-stopped
    entrypoint:
      - /bin/sh
      - -c
      - |
        cat <<EOF > /etc/rabbitmq/rabbitmq.conf
        vm_memory_high_watermark.absolute = 1024MiB
        disk_free_limit.absolute = 5GB
        loopback_users.guest = false
        loopback_users.admin = false
        cluster_partition_handling = autoheal
        cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
        cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq1
        cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq2
        cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq3
        EOF
        if [ $$HOSTNAME = 'rabbitmq1' ]; then
          sh -c "
            while ! rabbitmq-diagnostics -q ping >/dev/null 2>&1; do
              sleep 3s
              echo 'Waiting...'
            done
            sleep 30s
            rabbitmqctl set_policy ha-all \".*\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}'
          " &
        fi
        exec docker-entrypoint.sh rabbitmq-server
    environment:
      RABBITMQ_ERLANG_COOKIE: P6jhgjghjPuJ+9KMq+WqEzBA==
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s


  rabbitmq-2:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq2
    hostname: rabbitmq2
    restart: unless-stopped
    entrypoint:
      - /bin/sh
      - -c
      - |
        cat <<EOF > /etc/rabbitmq/rabbitmq.conf
        vm_memory_high_watermark.absolute = 1024MiB
        disk_free_limit.absolute = 5GB
        loopback_users.guest = false
        loopback_users.admin = false
        cluster_partition_handling = autoheal
        cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
        cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq1
        cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq2
        cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq3
        EOF
        if [ $$HOSTNAME = 'rabbitmq1' ]; then
          sh -c "
            while ! rabbitmq-diagnostics -q ping >/dev/null 2>&1; do
              sleep 3s
              echo 'Waiting...'
            done
            sleep 30s
            rabbitmqctl set_policy ha-all \".*\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}'
          " &
        fi
        exec docker-entrypoint.sh rabbitmq-server
    environment:
      RABBITMQ_ERLANG_COOKIE: P6jhgjghjPuJ+9KMq+WqEzBA==
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s


  rabbitmq-3:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq3
    hostname: rabbitmq3
    restart: unless-stopped
    entrypoint:
      - /bin/sh
      - -c
      - |
        cat <<EOF > /etc/rabbitmq/rabbitmq.conf
        vm_memory_high_watermark.absolute = 1024MiB
        disk_free_limit.absolute = 5GB
        loopback_users.guest = false
        loopback_users.admin = false
        cluster_partition_handling = autoheal
        cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
        cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq1
        cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq2
        cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq3
        EOF
        if [ $$HOSTNAME = 'rabbitmq1' ]; then
          sh -c "
            while ! rabbitmq-diagnostics -q ping >/dev/null 2>&1; do
              sleep 3s
              echo 'Waiting...'
            done
            sleep 30s
            rabbitmqctl set_policy ha-all \".*\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}'
          " &
        fi
        exec docker-entrypoint.sh rabbitmq-server
    environment:
      RABBITMQ_ERLANG_COOKIE: P6jhgjghjPuJ+9KMq+WqEzBA==
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5674:5672"
      - "15674:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s